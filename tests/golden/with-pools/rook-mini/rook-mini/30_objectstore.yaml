allowVolumeExpansion: true
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  annotations:
    storageclass.kubernetes.io/is-default-class: 'false'
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: ceph-bucket
  name: ceph-bucket
parameters:
  objectStoreName: ceph-objectstore
  objectStoreNamespace: syn-rook-mini-cluster
  region: eu-central-2
provisioner: syn-rook-mini.ceph.rook.io/bucket
reclaimPolicy: Delete
volumeBindingMode: Immediate
---
apiVersion: ceph.rook.io/v1
kind: CephObjectStore
metadata:
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: ceph-objectstore
  name: ceph-objectstore
  namespace: syn-rook-mini-cluster
spec:
  allowUsersInNamespaces:
    - '*'
  dataPool:
    erasureCoded:
      codingChunks: 1
      dataChunks: 2
    failureDomain: host
  gateway:
    hostNetwork: false
    instances: 2
    port: 80
    priorityClassName: system-cluster-critical
    resources:
      limits:
        memory: 1Gi
      requests:
        cpu: 100m
        memory: 512Mi
  metadataPool:
    failureDomain: host
    replicated:
      size: 3
  preservePoolsOnDelete: true
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: ceph-objectstore
  name: ceph-objectstore
  namespace: syn-rook-mini-cluster
spec:
  ingressClassName: nginx
  rules:
    - host: objects.local
      http:
        paths:
          - backend:
              service:
                name: rook-ceph-rgw-ceph-objectstore
                port:
                  number: 80
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - objects.local
      secretName: ceph-objectstore-tls
